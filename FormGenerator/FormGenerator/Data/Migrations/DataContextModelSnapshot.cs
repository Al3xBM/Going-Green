// <auto-generated />
using System;
using FormGenerator.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FormGenerator.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("FormGenerator.Entities.BaseProduct", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Brand")
                        .HasColumnType("TEXT");

                    b.Property<string>("Colour")
                        .HasColumnType("TEXT");

                    b.Property<string>("Consumption")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EnergyClass")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageURL")
                        .HasColumnType("TEXT");

                    b.Property<string>("Series")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.Property<float>("Weight")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("dateAdded")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Products");

                    b.HasDiscriminator<string>("Discriminator").HasValue("BaseProduct");
                });

            modelBuilder.Entity("FormGenerator.Entities.Blender", b =>
                {
                    b.HasBaseType("FormGenerator.Entities.BaseProduct");

                    b.Property<string>("Power")
                        .HasColumnType("TEXT");

                    b.Property<string>("Volume")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Blender");
                });

            modelBuilder.Entity("FormGenerator.Entities.Fridge", b =>
                {
                    b.HasBaseType("FormGenerator.Entities.BaseProduct");

                    b.Property<float>("Depth")
                        .HasColumnType("REAL");

                    b.Property<int>("Doors")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HasFreezer")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Height")
                        .HasColumnType("REAL");

                    b.Property<float>("Volume")
                        .HasColumnType("REAL")
                        .HasColumnName("Fridge_Volume");

                    b.Property<float>("Width")
                        .HasColumnType("REAL");

                    b.HasDiscriminator().HasValue("Fridge");
                });

            modelBuilder.Entity("FormGenerator.Entities.Microwave", b =>
                {
                    b.HasBaseType("FormGenerator.Entities.BaseProduct");

                    b.Property<string>("Depth")
                        .HasColumnType("TEXT")
                        .HasColumnName("Microwave_Depth");

                    b.Property<string>("Height")
                        .HasColumnType("TEXT")
                        .HasColumnName("Microwave_Height");

                    b.Property<string>("Power")
                        .HasColumnType("TEXT")
                        .HasColumnName("Microwave_Power");

                    b.Property<string>("Volume")
                        .HasColumnType("TEXT")
                        .HasColumnName("Microwave_Volume");

                    b.Property<string>("Width")
                        .HasColumnType("TEXT")
                        .HasColumnName("Microwave_Width");

                    b.HasDiscriminator().HasValue("Microwave");
                });

            modelBuilder.Entity("FormGenerator.Entities.Phone", b =>
                {
                    b.HasBaseType("FormGenerator.Entities.BaseProduct");

                    b.Property<string>("Bluetooth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Camera")
                        .HasColumnType("TEXT");

                    b.Property<string>("Connectivity")
                        .HasColumnType("TEXT");

                    b.Property<string>("Diagonal")
                        .HasColumnType("TEXT");

                    b.Property<string>("FrontalCamera")
                        .HasColumnType("TEXT");

                    b.Property<string>("Memory")
                        .HasColumnType("TEXT");

                    b.Property<string>("RAM")
                        .HasColumnType("TEXT");

                    b.Property<string>("SimSlots")
                        .HasColumnType("TEXT");

                    b.Property<string>("Software")
                        .HasColumnType("TEXT");

                    b.Property<string>("Wifi")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Phone");
                });

            modelBuilder.Entity("FormGenerator.Entities.Television", b =>
                {
                    b.HasBaseType("FormGenerator.Entities.BaseProduct");

                    b.Property<float>("Diagonal")
                        .HasColumnType("REAL")
                        .HasColumnName("Television_Diagonal");

                    b.Property<bool>("IsSmart")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Resolution")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Television");
                });

            modelBuilder.Entity("FormGenerator.Entities.VacuumCleaner", b =>
                {
                    b.HasBaseType("FormGenerator.Entities.BaseProduct");

                    b.Property<string>("Depth")
                        .HasColumnType("TEXT")
                        .HasColumnName("VacuumCleaner_Depth");

                    b.Property<string>("Height")
                        .HasColumnType("TEXT")
                        .HasColumnName("VacuumCleaner_Height");

                    b.Property<string>("Power")
                        .HasColumnType("TEXT")
                        .HasColumnName("VacuumCleaner_Power");

                    b.Property<string>("Volume")
                        .HasColumnType("TEXT")
                        .HasColumnName("VacuumCleaner_Volume");

                    b.Property<string>("Width")
                        .HasColumnType("TEXT")
                        .HasColumnName("VacuumCleaner_Width");

                    b.HasDiscriminator().HasValue("VacuumCleaner");
                });
#pragma warning restore 612, 618
        }
    }
}
